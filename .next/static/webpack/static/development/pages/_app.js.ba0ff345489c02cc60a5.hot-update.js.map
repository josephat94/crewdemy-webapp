{"version":3,"file":"static/webpack/static/development/pages/_app.js.ba0ff345489c02cc60a5.hot-update.js","sources":["webpack:///./pages/_app.js"],"sourcesContent":["// import App from 'next/app'\n\nimport React from 'react';\nimport { ThemeProvider, CSSReset, ColorModeProvider } from '@chakra-ui/core';\nimport theme from '../theme';\nimport Head from 'next/head';\nimport './main.css';\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\n// Use at the root of your app\n\nfunction MyApp({ Component, pageProps }) {\n  return (\n    <ThemeProvider theme={theme}>\n      <Head>\n        <title> Crewdemy</title>\n      </Head>\n      <ColorModeProvider>\n        <CSSReset />\n        <Component {...pageProps} />\n      </ColorModeProvider>\n    </ThemeProvider>\n  );\n}\n\n// Only uncomment this method if you have blocking data requirements for\n// every single page in your application. This disables the ability to\n// perform automatic static optimization, causing every page in your app to\n// be server-side rendered.\n//\n// MyApp.getInitialProps = async (appContext) => {\n//   // calls page's `getInitialProps` and fills `appProps.pageProps`\n//   const appProps = await App.getInitialProps(appContext);\n//\n//   return { ...appProps }\n// }\n\nexport default MyApp;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;;;;A","sourceRoot":""}