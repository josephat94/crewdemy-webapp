{"version":3,"file":"static/webpack/static/development/pages/course/[pid].js.93aac05d92986e8eff2b.hot-update.js","sources":["webpack:///./pages/course/[pid].js"],"sourcesContent":["import {\n  Heading,\n  Stack,\n  Box,\n  Divider,\n  Text,\n  SimpleGrid,\n  Button,\n  Image,\n  Tag,\n  TagLabel,\n  TagIcon,\n  Flex,\n  useToast,\n} from '@chakra-ui/core';\nimport Layout from '../../components/layout/Layout';\nimport Tema from './Tema';\n\nconst Content = ({ head, text, children }) => {\n  return (\n    <Stack spacing={8}>\n      <Box p={5} shadow='md' borderWidth='1px'>\n        <Heading fontSize='xl'>{head}</Heading>\n        <Text mt={4}>{text}</Text>\n\n        {children}\n      </Box>\n    </Stack>\n  );\n};\n\nconst imageUrl = 'https://img-a.udemycdn.com/course/240x135/2056209_90a3_2.jpg';\nexport default (props) => {\n  const toast = useToast();\n  return (\n    <Layout>\n      <Heading as='h2' size='lg'>\n        Nombre del Curso\n      </Heading>\n      <Divider></Divider>\n\n      <SimpleGrid columns={[1, 2, 2]} spacing={2}>\n        <Box>\n          <SimpleGrid columns={2} spacing={2}>\n            <Box>\n              <Content head='Duración' text={'20 Hrs'}></Content>\n            </Box>\n            <Box>\n              <Content head='Precio' text='$2500.00MXN'></Content>\n            </Box>\n          </SimpleGrid>\n          <SimpleGrid columns={1} spacing={2}>\n            <Box>\n              <Content\n                head='Descripción'\n                text={'Aqui va la descripción del curso'}\n              ></Content>\n            </Box>\n            <Box>\n              <Content head='Temario'>\n                {Array(1, 2, 3, 4).map((item) => (\n                  <Tema title={'Sección ' + item} key={item}></Tema>\n                ))}\n              </Content>\n            </Box>\n          </SimpleGrid>\n        </Box>\n\n        <Box>\n          <SimpleGrid columns={1} spacing={2}>\n            <Box>\n              <Content head='Preview'>\n                <Image w='100% ' src={imageUrl} />\n                <Divider></Divider>\n                <Button\n                  onClick={() => {\n                    toast({\n                      position: 'top-right',\n                      title: 'Curso Comprado!.',\n                      description:\n                        'Excelente! podrás acceder a tu curso desde tu perfil',\n                      status: 'success',\n                      duration: 9000,\n                      isClosable: true,\n                    });\n                  }}\n                  variantColor='teal'\n                  isFullWidth={true}\n                >\n                  Comprar Curso\n                </Button>\n              </Content>\n            </Box>\n          </SimpleGrid>\n          <Divider></Divider>\n          <SimpleGrid columns={2} spacing={2}>\n            <Box>\n              <Content head='Categoria'>\n                <Flex flexDirection='row' flexWrap>\n                  <Tag mr='10px' variantColor='cyan'>\n                    <TagLabel>Tecnología</TagLabel>\n                    <TagIcon icon='check' size='12px' />\n                  </Tag>\n                  <Tag variantColor='cyan'>\n                    <TagLabel>Programación</TagLabel>\n                    <TagIcon icon='check' size='12px' />\n                  </Tag>\n                </Flex>\n              </Content>\n            </Box>\n          </SimpleGrid>\n        </Box>\n      </SimpleGrid>\n    </Layout>\n  );\n};\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;AAAA;AAebA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAoBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;;;;A","sourceRoot":""}